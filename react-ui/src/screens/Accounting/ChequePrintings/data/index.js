import { useSelector } from 'react-redux';
import moment from 'moment';

export const columns = [
  {
    title: 'Number',
    dataIndex: 'number',
    key: 'number',
    datatype: 'string',
  },
  {
    title: 'Payee',
    dataIndex: 'vendor',
    key: 'vendor',
    datatype: 'object',
    dataToString: (object) => {
      return `[${object.code}] ${object.name}`;
    },
  },
  {
    title: 'Cheque Number',
    dataIndex: 'chequeNumber',
    key: 'chequeNumber',
    datatype: 'string',
  },
  {
    title: 'Cheque Date',
    dataIndex: 'chequeDate',
    key: 'chequeDate',
    datatype: 'string',
    render: (data) => moment(new Date(data)).format('DD/MM/YYYY')
  },
  {
    title: 'Status',
    dataIndex: 'status',
    key: 'status',
    datatype: 'string',
  },

];

const FormDetails = () => {
  const payees = useSelector((state) => state.maintenance.vendors.list);
  const bankAccounts = useSelector((state) => state.maintenance.bankAccount.bankAccountList);

  const formDetails = {
    form_name: 'cheque_printing',
    form_items: [
      {
        label: 'Number',
        name: 'number',
        placeholder: 'AUTOGENERATED UPON CREATION',
        readOnly: true,
      },
      {
        label: 'Payee',
        name: 'payee',
        type: 'selectSearch',
        selectName: 'name',
        choices: payees,
        render: (payee) => `[${payee.code}] ${payee.name}`,
        rules: [{ required: true }],
      },
      {
        label: 'Cheque Date',
        name: 'chequeDate',
        type: 'date',
        rules: [{ required: true }],
      },
      {
        label: 'Cheque Number',
        name: 'chequeNumber',
        rules: [{ required: true, message: 'Please provide a valid Cheque Number' }],
        placeholder: 'Cheque Number',
      },
      {
        label: 'Payee Name',
        name: 'payeeName',
        rules: [{ required: true, message: 'Please provide a valid Payee Name' }],
        placeholder: 'Payee Name',
      },
      {
        label: 'Bank Account',
        name: 'bankAccount',
        type: 'selectSearch',
        selectName: 'name',
        choices: bankAccounts,
        render: (object) => `[${object.code}] ${object.name}`,
        rules: [{ required: true }],
      },
      {
        label: 'Remarks',
        name: 'remarks',
        type: 'textArea',
        rules: [{ message: 'Please provide a valid remark' }],
        placeholder: 'Remarks',
      },
    ],
  };

  return { formDetails };
};

export default FormDetails;
