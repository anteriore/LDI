import { useSelector } from 'react-redux';

export const tableHeader = [
  {
    title: 'Ref No.',
    dataIndex: 'number',
    key: 'number',
    align: 'center',
    defaultSortOrder: 'ascend',
    sorter: (a, b) => a.number.length - b.number.length,
  },
  {
    title: 'Date',
    dataIndex: 'date',
    key: 'date',
    defaultSortOrder: 'ascend',
    datatype: 'date',
    align: 'center',
  },
  {
    title: 'Type',
    dataIndex: 'type',
    key: 'type',
    align: 'center',
    defaultSortOrder: 'ascend',
    sorter: (a, b) => a.totalAmount - b.totalAmount,
  },
  {
    title: 'Depot',
    dataIndex: 'depot',
    key: 'depot',
    align: 'center',
    defaultSortOrder: 'ascend',
    
  },
];

const FormDetails = () => {
  const depots = useSelector((state) => state.maintenance.depots);

  const formDetails = {
    form_name: 'productMovements',
    form_items: [
      {
        label: 'Product Movement Number',
        name: 'productMovementNumber',
        placeholder: 'AUTOGENERATED UPON CREATION',
        readOnly: true,
      },
      {
        label: 'Date',
        name: 'date',
        rules: [{ required: true, message: 'Please provdie a product movement date' }],
        placeholder: 'Product movement date',
        type: 'date',
      },
      {
        label: 'Depot',
        name: 'depot',
        type: 'selectSearch',
        choices: depots,
        render: (depot) => `[${depot.code}] ${depot.name}`,
        rules: [{ required: true, message: 'Please provide depot for product movement' }],
        onChange: (e) => {
          console.log(e)
        }
      },
      {
        label: 'Depot',
        name: 'depot',
        type: 'selectSearch',
        choices: null,
        render: (depot) => `[${depot.code}] ${depot.name}`,
        rules: [{ required: true, message: 'Please provide depot for product movement' }],
        onChange: (e) => {
          console.log(e)
        }
      }
    ]
  }


  const tableDetails = {
    label: 'Product Inventory List',
    name: 'productInventoryList',
    key: 'inventoryList',
    rules: [{required: true}],
    isVisible: true,
    fields: [],
    foreignKey: 'id',
    selectedKey: 'id',
    selectData: null, // to be provided in the InputForm
    selectFields: [],
    getValues: () => {},
    processData: () => {},
    checkSelected: () => {},
    renderTableColumns: () => {},
    emptyText: 'Please select a delivery receipt (DR) or an order slip (OS).',
  }

  return {formDetails, tableDetails}
}

export default FormDetails;